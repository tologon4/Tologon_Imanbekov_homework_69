@model Eatery

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<div class="row g-0 pt-5" id="profile">
    <div class="col-md-4 pb-5 text-center border-bottom">
        <img src="@Model.Avatar" id="profileAvatar" width="200" height="200" class="rounded-circle mx-auto ">
    </div>
    <div class="col-md-8 border-bottom">
        <div class="card-body">
            <div class="row">
                <div class=" col col-3"><h5 id="profileName">@Model.Name</h5></div>
                @if (ViewBag.EditDeleteAccess)
                {
                    <div class="col col-3 d-flex ms-4">
                        <span class="my-auto btn btn-light me-auto" id="edit" role="button">Редактировать</span>
                    </div>
                    <div class="col col-3 d-flex ms-4">
                        <a asp-action="CreateDish" asp-route-eateryId="@Model.Id" class="my-auto btn btn-light text-success me-auto" id="edit" role="button">Создаь блюдо</a>
                    </div>
                    <div class="col col-3 d-flex">
                        <span class="my-auto btn btn-light me-auto text-danger" id="deleteEatery" role="button">Удалить</span>
                    </div>
                }
                <div class="col col-12 mt-4">Описание заведения: &nbsp;<h5 id="profileDescription">@Model.Description</h5></div>
            </div>
        </div>
    </div>
</div>

<div class="row row-cols-2">
    <div class="col col-8">
        <div class="row row-cols-1 card-group mt-3 g-4">
            @if (@Model.Dishes.Count() == 0 || Model.Dishes == null)
            {
                <h5 class="mx-auto"> Блюд в этом заведении пока что нет!</h5>
            }
            else
            {
                @foreach (var dish in Model.Dishes)
                {
                    <div class="job-item border-success shadow p-4 mt-4">
                        <div class="row g-4">
                            <div class="col-sm-12 col-md-8 d-flex align-items-center">
                                <a asp-action="DishDetails" asp-route-id="@dish.Id">
                                    <img class="flex-shrink-0 img-fluid border rounded-3" src="@dish.Avatar" alt="" style="width: 100px; height: 100px;">
                                </a>
                                <div class="text-start ps-4">
                                    <h5 class="card-title"><a asp-action="DishDetails" asp-route-id="@dish.Id" class="nav-link text-dark">@dish.Name</a></h5>
                                    <p class="card-text"><i class="bi bi-blockquote-right text-primary me-2"></i> Описание: &nbsp; @dish.Description</p>
                                    <p class="card-text mt-auto"><i class="far fa-money-bill-alt text-primary me-2"></i> $ @dish.Price</p>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-4 d-flex flex-column align-items-start align-items-md-end justify-content-center">
                                <div class="d-flex mb-3">
                                    <button class="btn btn-warning mt-auto toBasket" data-dishId="@dish.Id" data-dishName="@dish.Name" data-dishPrice="@dish.Price">В корзину</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    <div class="col col-4 mt-5">
        <form id="orderForm">
            <div class="order-shops text-center border sticky-top mt-5 py-5 px-3" style="height: 500px; overflow-y: auto;">
                
            </div>
            <div class="text-center border w-100 mt-5 mx-auto">
                <button type="submit" class="btn btn-success mx-auto mt-3" id="order" style="display: none">Order</button>
            </div>
        </form>
    </div>
</div>


<div class="modal" id="orderModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Введите данные для заказа</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="orderForm2" asp-action="Order" asp-controller="Basket" method="post">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="phoneNumber" class="form-label">Номер телефона</label>
                        <input type="text" class="form-control" id="phoneNumber" name="phoneNumber" required>
                    </div>
                    <div class="mb-3">
                        <label for="address" class="form-label">Адрес доставки</label>
                        <input type="text" class="form-control" id="address" name="address" required>
                    </div>
                </div>
                <input type="hidden" value="" name="dishes" id="basketObjs"/>
                <input type="hidden" value="@Model.Id" name="eateryId" />
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-primary">Подтвердить заказ</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="modal" id="editModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Редактировать заведение</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Edit" id="editForm" asp-controller="Eatery" asp-anti-forgery="true"  enctype="multipart/form-data" >
                <div class="modal-body">
                    <div class="validation text-danger" asp-validation-summary="ModelOnly"></div>
                    <div class="input-group mt-4">
                        <label for="name"><span id="errorTakenName" class="text-danger" ></span></label>
                        <div class="input-group">
                            <input asp-for="Name" onkeyup="checkEateryName()" type="text" class="form-control" placeholder="Name" id="name" required="required">
                        </div>
                    </div>
                    <div class="input-group mt-4">
                        <label for="description"><span class="text-danger"></span></label>
                        <div class="input-group">
                            <textarea class="form-control h-100" asp-for="Description" placeholder="Description" id="description" type="text" rows="4" required="required"></textarea>
                        </div>
                    </div>
                    <div class="mt-4">
                        <label for="file">Выберите фото заведения</label>
                        <input id="file" type="file" name="uploadedFile" class="form-control">
                    </div>
                    <input type="hidden" name="eateryId" value="@Model.Id"/>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-primary">Редактировать</button>
                </div>
            </form>
        </div>
    </div>
</div>



@section Scripts
{
    <script>
       
    
        function checkEateryName() {
            let valueName = $('#name').val();
            let name = document.querySelector('input[id=name]');
            $.ajax({
                type: 'GET',
                url: '@Url.Action("EditCheckEateryName", "Validation")',
                contentType: 'application/json;charset=utf-8',
                dataType: 'json',
                data: { 'name': valueName, 'id': @Model.Id },
                success: function(result) {
                    if (!result) {
                        $('#errorTakenName').text(valueName + ' уже занят!');
                        name.setCustomValidity(valueName + ' уже занят!');
                    } else {
                        $('#errorTakenName').text('');
                        name.setCustomValidity('');
                    }
                }
            });
        }
    
        function addQuantityButtonListeners(quantityDiv) {
                    var plusBtn = quantityDiv.querySelector('.plus-btn');
                    var minusBtn = quantityDiv.querySelector('.minus-btn');
                    var input = quantityDiv.querySelector('input[name="quantity"]');
                    var priceElement = quantityDiv.querySelector('.dish-price');
                    var originalPrice = parseFloat(priceElement.getAttribute('data-original-price'));
        
                    plusBtn.addEventListener('click', function () {
                        var currentQuantity = parseInt(input.value);
                        input.value = currentQuantity + 1;
                        priceElement.textContent = `${(originalPrice * (currentQuantity + 1)).toFixed(2)}`;
                    });
        
                    minusBtn.addEventListener('click', function () {
                        var currentQuantity = parseInt(input.value);
                        if (currentQuantity > 1) {
                            input.value = currentQuantity - 1;
                            priceElement.textContent = `${(originalPrice * (currentQuantity - 1)).toFixed(2)}`;
                        } else {
                            quantityDiv.remove();
                            checkOrderButtonVisibility();
                        }
                    });
        
                    input.addEventListener('input', function () {
                        var newQuantity = parseInt(input.value);
                        if (isNaN(newQuantity) || newQuantity < 1) {
                            input.value = 1;
                            newQuantity = 1;
                        }
                        priceElement.textContent = `${(originalPrice * newQuantity).toFixed(2)}`;
                    });
                    
                }
        
        function checkOrderButtonVisibility() {
            var orderForm = $('#orderForm');
            var orderButton = orderForm.find('#order');
            var orderShops = orderForm.find('.order-shops');
        
            if (orderShops.children().length > 0) {
                orderButton.show();
            } else {
                orderButton.hide();
            }
        }
                
        $(document).ready(function() {
            
            
            checkOrderButtonVisibility();
            
            document.getElementById('orderForm').addEventListener('submit', function(event) {
                    event.preventDefault(); 
                    $('#orderModal').modal('show');
                                basketObjs = [];
                                $('.order-shops .quantity').each(function() {
                                    const dishId = $(this).attr('data-dishid');
                                    const dishName = $(this).find('h6').text().trim();
                                    const price = parseFloat($(this).find('.dish-price').text().trim());
                                    const quantity = parseInt($(this).find('input[name="quantity"]').val());
                    
                                    basketObjs.push({
                                        dishId: dishId,
                                        dishName: dishName,
                                        price: price,
                                        quantity: quantity
                                    });
                                });
                    $('#basketObjs').val(JSON.stringify(basketObjs));
                   
                    
                });
           
            
            document.querySelectorAll('.toBasket').forEach(button => {
                        button.addEventListener('click', function () {
                            var dishId = this.getAttribute('data-dishId');
                            var dishName = this.getAttribute('data-dishName');
                            var dishPrice = parseFloat(this.getAttribute('data-dishPrice'));
            
                            var existingQuantityDiv = document.querySelector(`.quantity[data-dishId='${dishId}']`);
            
                            if (existingQuantityDiv) {
                                var input = existingQuantityDiv.querySelector('input[name="quantity"]');
                                var currentQuantity = parseInt(input.value);
                                input.value = currentQuantity + 1;
            
                                var priceElement = existingQuantityDiv.querySelector('.dish-price');
                                var currentPrice = parseFloat(priceElement.getAttribute('data-original-price'));
                                priceElement.textContent = `${(currentPrice * (currentQuantity + 1)).toFixed(2)}`;
                            } else {
                                var quantityDiv = document.createElement('div');
                                quantityDiv.classList.add('quantity', 'mb-3', 'p-2', 'border', 'rounded');
                                quantityDiv.setAttribute('data-dishId', dishId);
            
                                quantityDiv.innerHTML = `
                                    <h6>${dishName}</h6>
                                    <p>Цена: <span class="dish-price" data-original-price="${dishPrice}">${dishPrice.toFixed(2)}</span> KGS</p>
                                    <div class="d-flex ">
                                        <span class="minus-btn ms-auto me-2" role="button">
                                            <i class="bi bi-dash-square fs-3"></i>
                                        </span>
                                        <input type="number" class="form-control w-25 text-center" name="quantity" value="1" min="1">
                                        <span class="plus-btn ms-2 me-auto" role="button">
                                            <i class="bi bi-plus-square fs-3"></i>
                                        </span>
                                    </div>
                                `;
            
                                document.querySelector('.order-shops').appendChild(quantityDiv);
            
                                addQuantityButtonListeners(quantityDiv);
                            }
                            checkOrderButtonVisibility();
                        });
                    });
            
           
            
                                 
            $('#deleteEatery').click(function(e) {
                            e.preventDefault();
                            let eateryId = @Model.Id;
                            let deleteConfirm = confirm('Вы уверены что хотите удалить заведение ' + '@Model.Name' + ' ?');
                            if (deleteConfirm) {
                                $.ajax({
                                    url: '@Url.Action("Delete", "Eatery")',
                                    type: 'POST',
                                    data: { 'id': eateryId },
                                    success: function(response) {
                                        if (response) {
                                            $('#profile').empty().html(`
                                                <h4 class="text-danger"> Заведение ${ '@Model.Name' } было удалено!</h4>
                                            `);
                                        } else {
                                            alert('Произошла ошибка при удалении заведения!');
                                        }
                                    }
                                });
                            }
                        });
            
            
            $('#edit').click(function(e) {
                e.preventDefault();
                $('#editModal').modal('show');
            });
    
            $('#editForm').submit(function(event) {
                event.preventDefault();
                let form = $('#editForm')[0];
                let formData = new FormData(form);
                $.ajax({
                    url: '@Url.Action("Edit", "Eatery")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        if (response) {
                            $('#profileName').text(response.name);
                            $('#profileDescription').text(response.description);
                            $('#profileAvatar').attr('src', response.avatar);
                        } else {
                            alert('Ошибка: при редактировании заведения');
                        }
                    },
                    error: function() {
                        alert('Произошла ошибка при отправке данных');
                    }
                });
            });
        });
    </script>
}
